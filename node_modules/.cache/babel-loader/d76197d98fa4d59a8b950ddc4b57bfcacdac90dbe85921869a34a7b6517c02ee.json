{"ast":null,"code":"var _jsxFileName = \"/Users/joynuelle/Projects/jellycat-react/src/App.js\",\n  _s = $RefreshSig$();\nimport './styles.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gameData = {\n  \"1\": {\n    \"text\": \"It's the beginning of the game.\",\n    \"choices\": {\n      \"ok i'll stay here\": [2, [\"jellycat1, jellycat2\"]],\n      \"no\": [2, [\"jellycat1, jellycat2\"]]\n    }\n  },\n  \"2\": {\n    \"text\": \"We're halfway through the game.\",\n    \"choices\": {\n      \"left\": [3, [\"jellycat3\"]],\n      \"right\": [3, [\"jellycat3, jellycat4\"]]\n    }\n  },\n  \"3\": {\n    \"text\": \"Game is about to be over!\",\n    \"choices\": {\n      \"left\": [0, [\"jellycat4\"]],\n      \"right\": [0, [\"jellycat1, jellycat4\"]]\n    }\n  },\n  \"0\": {}\n};\nconst personalities_initial_state = {\n  \"jellycat1\": 0,\n  \"jellycat2\": 0,\n  \"jellycat3\": 0,\n  \"jellycat4\": 0\n};\nfunction Game() {\n  _s();\n  const [currentState, setCurrentState] = useState(1);\n  const [personalities, setPersonalities] = useState(personalities_initial_state);\n  function startGame() {\n    console.log(\"a\");\n    document.querySelector('.title').style.display = 'none';\n    document.querySelector('.start-button').style.display = 'none';\n    document.getElementById('game-container').style.display = 'block';\n    renderState(1);\n  }\n  function renderState(state) {\n    console.log(\"b\");\n    const storyText = document.getElementById('story-text');\n    const choicesContainer = document.getElementById('choices');\n    storyText.textContent = gameData[state].text;\n    choicesContainer.innerHTML = '';\n    for (const [choice, info] of Object.entries(gameData[state].choices)) {\n      const button = document.createElement('button');\n      button.textContent = choice;\n      button.className = 'choice-button';\n      let nextState = info[0];\n      button.onclick = () => changeState(nextState, info[1]); //each time you change state you update the personalities dictionary\n      choicesContainer.appendChild(button);\n    }\n  }\n  ;\n  function changeState(newState, selectedPersonalities) {\n    console.log(personalities);\n    console.log(\"selected personalities %s\", selectedPersonalities);\n    // increase personalities by 1\n    const nextPersonalities = {\n      ...personalities\n    };\n    for (const key in selectedPersonalities) {\n      nextPersonalities[key]++;\n    }\n    setPersonalities(nextPersonalities);\n\n    // update current state\n    setCurrentState(newState);\n    console.log(\"current state %d\", currentState);\n    // if current state  === 0 reveal most selected vegetable\n    if (currentState === 0) {\n      revealMostSelectedVegetable();\n    } else {\n      renderState(currentState);\n    }\n    // else render the next state\n  }\n  function revealMostSelectedVegetable() {\n    console.log(\"calculating fate\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"What Jellycat are you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"start-button\",\n      onClick: startGame,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      id: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"story-text\",\n        id: \"story-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"choices\",\n        id: \"choices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"2AoG4d9Sj7auGL9Yu9OeB/1+Om0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","gameData","personalities_initial_state","Game","_s","currentState","setCurrentState","personalities","setPersonalities","startGame","console","log","document","querySelector","style","display","getElementById","renderState","state","storyText","choicesContainer","textContent","text","innerHTML","choice","info","Object","entries","choices","button","createElement","className","nextState","onclick","changeState","appendChild","newState","selectedPersonalities","nextPersonalities","key","revealMostSelectedVegetable","children","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","id","_c","$RefreshReg$"],"sources":["/Users/joynuelle/Projects/jellycat-react/src/App.js"],"sourcesContent":["import './styles.css';\nimport { useState } from 'react';\n\nconst gameData = {\n  \"1\": {\n    \"text\": \"It's the beginning of the game.\",\n    \"choices\": {\n      \"ok i'll stay here\": [2, [\"jellycat1, jellycat2\"]],\n      \"no\": [2, [\"jellycat1, jellycat2\"]]\n    }\n  },\n  \"2\": {\n    \"text\": \"We're halfway through the game.\",\n    \"choices\": {\n      \"left\": [3, [\"jellycat3\"]],\n      \"right\": [3, [\"jellycat3, jellycat4\"]]\n    }\n  },\n  \"3\": {\n    \"text\": \"Game is about to be over!\",\n    \"choices\": {\n      \"left\": [0, [\"jellycat4\"]],\n      \"right\": [0, [\"jellycat1, jellycat4\"]]\n    }\n  },\n  \"0\": {}\n};\n\nconst personalities_initial_state = {\n  \"jellycat1\": 0,\n  \"jellycat2\": 0,\n  \"jellycat3\": 0,\n  \"jellycat4\": 0\n};\n\nfunction Game() {\n  const [currentState, setCurrentState] = useState(1);\n  const [personalities, setPersonalities] = useState(personalities_initial_state);\n\n  function startGame() {\n    console.log(\"a\");\n    document.querySelector('.title').style.display = 'none';\n    document.querySelector('.start-button').style.display = 'none';\n    document.getElementById('game-container').style.display = 'block';\n    renderState(1);\n  }\n\n  function renderState(state) {\n    console.log(\"b\");\n    const storyText = document.getElementById('story-text');\n    const choicesContainer = document.getElementById('choices');\n\n    storyText.textContent = gameData[state].text;\n    choicesContainer.innerHTML = '';\n\n      for (const [choice, info] of Object.entries(gameData[state].choices)) {\n        const button = document.createElement('button');\n        button.textContent = choice;\n        button.className = 'choice-button';\n        let nextState = info[0];\n        button.onclick = () => changeState(nextState, info[1]); //each time you change state you update the personalities dictionary\n        choicesContainer.appendChild(button);\n      }\n    };\n\n\n  function changeState(newState, selectedPersonalities) {\n    console.log(personalities);\n    console.log(\"selected personalities %s\", selectedPersonalities);\n    // increase personalities by 1\n    const nextPersonalities = {...personalities};\n    for (const key in selectedPersonalities) {\n      nextPersonalities[key]++;\n    }\n    setPersonalities(nextPersonalities);\n    \n    // update current state\n    setCurrentState(newState);\n    console.log(\"current state %d\", currentState);\n    // if current state  === 0 reveal most selected vegetable\n    if (currentState === 0) {\n      revealMostSelectedVegetable();\n    }\n    else {\n      renderState(currentState);\n    }\n    // else render the next state\n  }\n\n  function revealMostSelectedVegetable() {\n    console.log(\"calculating fate\");\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"title\">What Jellycat are you?</div>\n          <a href=\"#\" className=\"start-button\" onClick={startGame}>Start</a>\n      <div className=\"game-container\" id=\"game-container\">\n        <div className=\"story-text\" id=\"story-text\"></div>\n        <div className=\"choices\" id=\"choices\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}