{"ast":null,"code":"var _jsxFileName = \"/Users/joynuelle/Projects/jellycat-react/src/App.js\",\n  _s = $RefreshSig$();\nimport './styles.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gameData = {\n  \"1\": {\n    \"text\": \"It's the beginning of the game.\",\n    \"choices\": {\n      \"ok i'll stay here\": [1, [\"jellycat1\", \"jellycat2\"]],\n      \"no\": [0, [\"jellycat1, jellycat2\"]]\n    }\n  }\n};\nconst personalities_obj = {\n  \"jellycat1\": 0,\n  \"jellycat2\": 0\n};\nfunction Game() {\n  _s();\n  const [currentState, setCurrentState] = useState(1);\n  const [personalities, setPersonalities] = useState(personalities_obj);\n  function startGame() {\n    console.log(\"a\");\n    document.querySelector('.title').style.display = 'none';\n    document.querySelector('.start-button').style.display = 'none';\n    document.getElementById('game-container').style.display = 'block';\n    renderState(1);\n  }\n  function renderState(state) {\n    console.log(\"b\");\n    // const storyText = document.getElementById('story-text');\n    // const choicesContainer = document.getElementById('choices');\n\n    // const img = new Image();\n    // img.src = gameData[currentState].image;\n\n    // img.onload = () => {\n    //   storyText.textContent = gameData[currentState].text;\n    //   choicesContainer.innerHTML = '';\n\n    //   for (const [choice, info] of Object.entries(gameData[currentState].choices)) {\n    //     const button = document.createElement('button');\n    //     button.textContent = choice;\n    //     button.className = 'choice-button';\n    //     let nextState = info[0];\n    //     button.onclick = () => changeState(nextState, info[1]); //each time you change state you update the personalities dictionary\n    //     choicesContainer.appendChild(button);\n    // }\n    // };\n  }\n  function changeState(newState, selectedPersonalities) {\n    console.log(\"changing states\");\n    console.log(personalities);\n    // increase personalities by 1\n    const nextPersonalities = [...personalities];\n    selectedPersonalities.forEach(personality => {\n      nextPersonalities[personalities]++;\n    });\n    setPersonalities(nextPersonalities);\n\n    // update current state\n    setCurrentState(newState);\n\n    // if current state  === 0 reveal most selected vegetable\n    if (currentState === 0) {\n      revealMostSelectedVegetable();\n    }\n    // else render the next state\n  }\n  function revealMostSelectedVegetable() {\n    console.log(\"calculating fate\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"What Jellycat are you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"start-button\",\n      onClick: startGame,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      id: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"story-text\",\n        id: \"story-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"choices\",\n        id: \"choices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"j+cpgXi9oG5UU1IYsBbN7/Jco78=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","gameData","personalities_obj","Game","_s","currentState","setCurrentState","personalities","setPersonalities","startGame","console","log","document","querySelector","style","display","getElementById","renderState","state","changeState","newState","selectedPersonalities","nextPersonalities","forEach","personality","revealMostSelectedVegetable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","id","_c","$RefreshReg$"],"sources":["/Users/joynuelle/Projects/jellycat-react/src/App.js"],"sourcesContent":["import './styles.css';\nimport { useState } from 'react';\n\nconst gameData = {\n  \"1\": {\n    \"text\": \"It's the beginning of the game.\",\n    \"choices\": {\n      \"ok i'll stay here\": [1, [\"jellycat1\", \"jellycat2\"]],\n      \"no\": [0, [\"jellycat1, jellycat2\"]]\n    }\n  }\n}\n\nconst personalities_obj = {\n  \"jellycat1\": 0,\n  \"jellycat2\": 0\n}\n\nfunction Game() {\n  const [currentState, setCurrentState] = useState(1);\n  const [personalities, setPersonalities] = useState(personalities_obj);\n\n  function startGame() {\n    console.log(\"a\");\n    document.querySelector('.title').style.display = 'none';\n    document.querySelector('.start-button').style.display = 'none';\n    document.getElementById('game-container').style.display = 'block';\n    renderState(1);\n  }\n\n  function renderState(state) {\n    console.log(\"b\");\n    // const storyText = document.getElementById('story-text');\n    // const choicesContainer = document.getElementById('choices');\n\n    // const img = new Image();\n    // img.src = gameData[currentState].image;\n\n    // img.onload = () => {\n    //   storyText.textContent = gameData[currentState].text;\n    //   choicesContainer.innerHTML = '';\n\n    //   for (const [choice, info] of Object.entries(gameData[currentState].choices)) {\n    //     const button = document.createElement('button');\n    //     button.textContent = choice;\n    //     button.className = 'choice-button';\n    //     let nextState = info[0];\n    //     button.onclick = () => changeState(nextState, info[1]); //each time you change state you update the personalities dictionary\n    //     choicesContainer.appendChild(button);\n    // }\n    // };\n}\n\n\n  function changeState(newState, selectedPersonalities) {\n    console.log(\"changing states\"); \n    console.log(personalities);\n    // increase personalities by 1\n    const nextPersonalities = [...personalities]\n    selectedPersonalities.forEach(personality => {\n      nextPersonalities[personalities]++;\n    })\n    setPersonalities(nextPersonalities);\n\n    // update current state\n    setCurrentState(newState);\n\n    // if current state  === 0 reveal most selected vegetable\n    if (currentState === 0) {\n      revealMostSelectedVegetable();\n    }\n    // else render the next state\n  }\n\n  function revealMostSelectedVegetable() {\n    console.log(\"calculating fate\");\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"title\">What Jellycat are you?</div>\n          <a href=\"#\" className=\"start-button\" onClick={startGame}>Start</a>\n      <div className=\"game-container\" id=\"game-container\">\n        <div className=\"story-text\" id=\"story-text\"></div>\n        <div className=\"choices\" id=\"choices\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}