{"ast":null,"code":"var _jsxFileName = \"/Users/joynuelle/Projects/jellycat-react/src/App.js\",\n  _s = $RefreshSig$();\nimport './styles.css';\nimport { createRef, useState } from 'react';\nimport gameData from './GameData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst personalities_initial_state = {\n  \"jellycat1\": 0,\n  \"jellycat2\": 0,\n  \"jellycat3\": 0,\n  \"jellycat4\": 0\n};\nfunction Game() {\n  _s();\n  const [currentState, setCurrentState] = useState(1);\n  const [personalities, setPersonalities] = useState(personalities_initial_state);\n  const [justStarted, setJustStarted] = useState(true);\n  const [createButtonsNow, setCreateButtonsNow] = useState(false);\n  const [storyText, setStoryText] = useState(\"\");\n  function startGame() {\n    console.log(\"a\");\n    console.log(justStarted);\n    if (justStarted) {\n      setJustStarted(false);\n    }\n  }\n  function renderState() {\n    console.log(\"b\");\n    console.log(\"current state: \", currentState);\n    if (currentState === 0) {\n      revealMostSelectedVegetable();\n    } else {\n      console.log(\"currentState is \", currentState);\n      setStoryText(gameData[currentState].text);\n      setCreateButtonsNow(true);\n    }\n  }\n  function createButtons() {\n    console.log(\"current state from create buttons: \", currentState);\n    const buttonList = [];\n    for (const [choice, info] of Object.entries(gameData[currentState].choices)) {\n      console.log(\"choices: \", gameData[currentState].choices);\n      console.log(\"choice: \", choice);\n      console.log(\"info: \", info);\n      let nextState = info[0];\n      buttonList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"choice-button\",\n        id: \"choices\",\n        onClick: () => changeState(nextState, info[1]),\n        children: choice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 23\n      }, this));\n    }\n    return buttonList;\n  }\n  ;\n  function changeState(newState, selectedPersonalities) {\n    // console.log(personalities);\n    // console.log(\"selected personalities %s\", selectedPersonalities);\n    // // increase personalities by 1\n    // const nextPersonalities = {...personalities};\n    // for (const key in selectedPersonalities) {\n    //   nextPersonalities[key]++;\n    // }\n    // console.log(selectedPersonalities);\n    // console.log(\"nextpersonalities post set \", nextPersonalities);\n\n    // setPersonalities(nextPersonalities);\n    // console.log(\"personalities post set \", personalities);\n    console.log(\"in change state\");\n    setCurrentState(newState);\n    console.log(\"the new current state is \", currentState);\n    setStoryText(gameData[currentState].text);\n    if (newState === 0) {\n      revealMostSelectedVegetable();\n      setCreateButtonsNow(false);\n    } else {\n      renderState(currentState);\n    }\n  }\n  function revealMostSelectedVegetable() {\n    console.log(\"calculating fate\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: justStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"What Jellycat are you?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"start-button\",\n        onClick: startGame,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        id: \"game-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"story-text\",\n        id: \"story-text\",\n        children: storyText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), createButtonsNow ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", createButtons()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"/bGjGZ9F4es1Iz/l8bwSPnsTT3Q=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["createRef","useState","gameData","jsxDEV","_jsxDEV","personalities_initial_state","Game","_s","currentState","setCurrentState","personalities","setPersonalities","justStarted","setJustStarted","createButtonsNow","setCreateButtonsNow","storyText","setStoryText","startGame","console","log","renderState","revealMostSelectedVegetable","text","createButtons","buttonList","choice","info","Object","entries","choices","nextState","push","className","id","onClick","changeState","children","fileName","_jsxFileName","lineNumber","columnNumber","newState","selectedPersonalities","href","_c","$RefreshReg$"],"sources":["/Users/joynuelle/Projects/jellycat-react/src/App.js"],"sourcesContent":["import './styles.css';\nimport { createRef, useState } from 'react';\nimport gameData from './GameData';\n\nconst personalities_initial_state = {\n  \"jellycat1\": 0,\n  \"jellycat2\": 0,\n  \"jellycat3\": 0,\n  \"jellycat4\": 0\n};\n\n\nfunction Game() {\n  const [currentState, setCurrentState] = useState(1);\n  const [personalities, setPersonalities] = useState(personalities_initial_state);\n  const [justStarted, setJustStarted] = useState(true);\n  const [createButtonsNow, setCreateButtonsNow] = useState(false);\n  const [storyText, setStoryText] = useState(\"\");\n\n  function startGame() {\n    console.log(\"a\");\n    console.log(justStarted);\n    \n    if (justStarted) {\n      setJustStarted(false);\n    }\n  }\n\n  function renderState() {\n    console.log(\"b\");\n    console.log(\"current state: \", currentState);\n    if (currentState === 0) {\n      revealMostSelectedVegetable();\n    }\n    else {\n      console.log(\"currentState is \", currentState);\n      setStoryText(gameData[currentState].text);\n      setCreateButtonsNow(true);\n    }\n  }\n\n  function createButtons() {\n    console.log(\"current state from create buttons: \", currentState);\n    const buttonList = [];\n\n    for (const [choice, info] of Object.entries(gameData[currentState].choices)) {\n      console.log(\"choices: \", gameData[currentState].choices);\n      console.log(\"choice: \", choice);\n      console.log(\"info: \", info);\n      let nextState = info[0];\n      buttonList.push(<div className=\"choice-button\" id=\"choices\" onClick={() => changeState(nextState, info[1])}>{choice}</div>);\n    }\n    return buttonList;\n  };\n\n\n\n  function changeState(newState, selectedPersonalities) {\n    // console.log(personalities);\n    // console.log(\"selected personalities %s\", selectedPersonalities);\n    // // increase personalities by 1\n    // const nextPersonalities = {...personalities};\n    // for (const key in selectedPersonalities) {\n    //   nextPersonalities[key]++;\n    // }\n    // console.log(selectedPersonalities);\n    // console.log(\"nextpersonalities post set \", nextPersonalities);\n\n    // setPersonalities(nextPersonalities);\n    // console.log(\"personalities post set \", personalities);\n    console.log(\"in change state\");\n    setCurrentState(newState);\n    console.log(\"the new current state is \", currentState);\n    setStoryText(gameData[currentState].text);\n\n    if (newState === 0) {\n      revealMostSelectedVegetable();\n      setCreateButtonsNow(false);\n    }\n    else {\n      renderState(currentState);\n    }\n  }\n\n  function revealMostSelectedVegetable() {\n    console.log(\"calculating fate\");\n  }\n\n  return (\n    <div className=\"container\">\n      { justStarted ? (\n        <div>\n          <div className=\"title\">What Jellycat are you?</div>\n          <a href=\"#\" className=\"start-button\" onClick={startGame}>Start</a>\n        </div>\n      ) : (\n        <div>\n          <div className=\"game-container\" id=\"game-container\"></div>\n          <div className=\"story-text\" id=\"story-text\">{storyText}</div>\n          { createButtonsNow ? ( \n            <div> {createButtons()}\n            </div> ): <div></div>}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}