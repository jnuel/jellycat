{"ast":null,"code":"var _jsxFileName = \"/Users/joynuelle/Projects/jellycat-react/src/GameContainer.js\";\nimport React, { usestate } from 'react';\nimport gameData from './GameData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createButtons(currentState) {\n  console.log(\"current state from create buttons: \", currentState);\n  const buttonList = [];\n  for (const [choice, info] of Object.entries(gameData[currentState].choices)) {\n    console.log(\"choices: \", gameData[currentState].choices);\n    console.log(\"choice: \", choice);\n    console.log(\"info: \", info);\n    let nextState = info[0];\n    buttonList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"choice-button\",\n      id: \"choices\",\n      onClick: () => changeState(nextState, info[1]),\n      children: choice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 23\n    }, this));\n  }\n  return buttonList;\n}\n;\nconst GameContainer = ({\n  personalities,\n  currentState\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      id: \"game-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"story-text\",\n      id: \"story-text\",\n      children: gameData[currentState].text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), \"gameData[currentState].choices.length ? (\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", createButtons(currentState), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), \"            ) : \", /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c = GameContainer;\nexport default GameContainer;\nvar _c;\n$RefreshReg$(_c, \"GameContainer\");","map":{"version":3,"names":["React","usestate","gameData","jsxDEV","_jsxDEV","createButtons","currentState","console","log","buttonList","choice","info","Object","entries","choices","nextState","push","className","id","onClick","changeState","children","fileName","_jsxFileName","lineNumber","columnNumber","GameContainer","personalities","text","_c","$RefreshReg$"],"sources":["/Users/joynuelle/Projects/jellycat-react/src/GameContainer.js"],"sourcesContent":["import React, {usestate} from 'react'\nimport gameData from './GameData'\n\nfunction createButtons(currentState) {\n    console.log(\"current state from create buttons: \", currentState);\n    const buttonList = [];\n\n    for (const [choice, info] of Object.entries(gameData[currentState].choices)) {\n      console.log(\"choices: \", gameData[currentState].choices);\n      console.log(\"choice: \", choice);\n      console.log(\"info: \", info);\n      let nextState = info[0];\n      buttonList.push(<div className=\"choice-button\" id=\"choices\" onClick={() => changeState(nextState, info[1])}>{choice}</div>);\n    }\n    return buttonList;\n  };\n\nconst GameContainer = ({personalities, currentState}) => {\n    return (\n        <div>\n            <div className=\"game-container\" id=\"game-container\"></div>\n            <div className=\"story-text\" id=\"story-text\">{gameData[currentState].text}</div>\n            gameData[currentState].choices.length ? (\n                <div> {createButtons(currentState)} </div>            )\n            : <div></div>\n        </div>\n    );\n}\n\nexport default GameContainer;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,aAAaA,CAACC,YAAY,EAAE;EACjCC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEF,YAAY,CAAC;EAChE,MAAMG,UAAU,GAAG,EAAE;EAErB,KAAK,MAAM,CAACC,MAAM,EAAEC,IAAI,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACX,QAAQ,CAACI,YAAY,CAAC,CAACQ,OAAO,CAAC,EAAE;IAC3EP,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEN,QAAQ,CAACI,YAAY,CAAC,CAACQ,OAAO,CAAC;IACxDP,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEE,MAAM,CAAC;IAC/BH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEG,IAAI,CAAC;IAC3B,IAAII,SAAS,GAAGJ,IAAI,CAAC,CAAC,CAAC;IACvBF,UAAU,CAACO,IAAI,eAACZ,OAAA;MAAKa,SAAS,EAAC,eAAe;MAACC,EAAE,EAAC,SAAS;MAACC,OAAO,EAAEA,CAAA,KAAMC,WAAW,CAACL,SAAS,EAAEJ,IAAI,CAAC,CAAC,CAAC,CAAE;MAAAU,QAAA,EAAEX;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC;EAC7H;EACA,OAAOhB,UAAU;AACnB;AAAC;AAEH,MAAMiB,aAAa,GAAGA,CAAC;EAACC,aAAa;EAAErB;AAAY,CAAC,KAAK;EACrD,oBACIF,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAACC,EAAE,EAAC;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1DrB,OAAA;MAAKa,SAAS,EAAC,YAAY;MAACC,EAAE,EAAC,YAAY;MAAAG,QAAA,EAAEnB,QAAQ,CAACI,YAAY,CAAC,CAACsB;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,6CAE3E,eAAArB,OAAA;MAAAiB,QAAA,GAAK,GAAC,EAAChB,aAAa,CAACC,YAAY,CAAC,EAAC,GAAC;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,oBAC5C,eAAArB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd,CAAC;AAAAI,EAAA,GAVKH,aAAa;AAYnB,eAAeA,aAAa;AAAC,IAAAG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}