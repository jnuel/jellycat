{"ast":null,"code":"var _jsxFileName = \"/Users/joynuelle/Projects/jellycat-react/src/App.js\",\n  _s = $RefreshSig$();\nimport './styles.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gameData = {\n  \"1\": {\n    \"text\": \"It's the beginning of the game.\",\n    \"choices\": {\n      \"ok i'll stay here\": [2, [\"jellycat1\", \"jellycat2\"]],\n      \"no\": [3, [\"jellycat1, jellycat2\"]]\n    }\n  }\n};\nconst personalities = {\n  \"jellycat1\": 0,\n  \"jellycat2\": 0\n};\nfunction Game() {\n  _s();\n  const [currentState, setCurrentState] = useState(1);\n  const storyText = document.getElementById('story-text');\n  const choicesContainer = document.getElementById('choices');\n  const img = new Image();\n  img.src = gameData[currentState].image;\n  img.onload = () => {\n    storyText.textContent = gameData[currentState].text;\n    choicesContainer.innerHTML = '';\n    for (const [choice, info] of Object.entries(gameData[currentState].choices)) {\n      const button = document.createElement('button');\n      button.textContent = choice;\n      button.className = 'choice-button';\n      let nextState = info[0];\n      button.onclick = () => changeState(nextState, info[1]); //each time you change state you update the personalities dictionary\n      choicesContainer.appendChild(button);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"title\",\n      children: \"What Jellycat are you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      class: \"start-button\",\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"mxvEAPQULaWvM/vXAYI8kHg9P6U=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","gameData","personalities","Game","_s","currentState","setCurrentState","storyText","document","getElementById","choicesContainer","img","Image","src","image","onload","textContent","text","innerHTML","choice","info","Object","entries","choices","button","createElement","className","nextState","onclick","changeState","appendChild","class","children","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["/Users/joynuelle/Projects/jellycat-react/src/App.js"],"sourcesContent":["import './styles.css';\nimport { useState } from 'react';\n\nconst gameData = {\n  \"1\": {\n    \"text\": \"It's the beginning of the game.\",\n    \"choices\": {\n      \"ok i'll stay here\": [2, [\"jellycat1\", \"jellycat2\"]],\n      \"no\": [3, [\"jellycat1, jellycat2\"]]\n    }\n  }\n}\n\nconst personalities = {\n  \"jellycat1\": 0,\n  \"jellycat2\": 0\n}\n\n\nfunction Game() {\n  const [currentState, setCurrentState] = useState(1);\n  \n  const storyText = document.getElementById('story-text');\n  const choicesContainer = document.getElementById('choices');\n\n  const img = new Image();\n  img.src = gameData[currentState].image;\n\n  img.onload = () => {\n    storyText.textContent = gameData[currentState].text;\n    choicesContainer.innerHTML = '';\n\n    for (const [choice, info] of Object.entries(gameData[currentState].choices)) {\n      const button = document.createElement('button');\n      button.textContent = choice;\n      button.className = 'choice-button';\n      let nextState = info[0];\n      button.onclick = () => changeState(nextState, info[1]); //each time you change state you update the personalities dictionary\n      choicesContainer.appendChild(button);\n  }\n  }\n\n  return (\n    <div class =\"container\">\n    <div class=\"title\">What Jellycat are you?</div>\n        <a href=\"#\" class=\"start-button\">Start</a>\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAG;EACf,GAAG,EAAE;IACH,MAAM,EAAE,iCAAiC;IACzC,SAAS,EAAE;MACT,mBAAmB,EAAE,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;MACpD,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,sBAAsB,CAAC;IACpC;EACF;AACF,CAAC;AAED,MAAMC,aAAa,GAAG;EACpB,WAAW,EAAE,CAAC;EACd,WAAW,EAAE;AACf,CAAC;AAGD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMS,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;EACvD,MAAMC,gBAAgB,GAAGF,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;EAE3D,MAAME,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;EACvBD,GAAG,CAACE,GAAG,GAAGZ,QAAQ,CAACI,YAAY,CAAC,CAACS,KAAK;EAEtCH,GAAG,CAACI,MAAM,GAAG,MAAM;IACjBR,SAAS,CAACS,WAAW,GAAGf,QAAQ,CAACI,YAAY,CAAC,CAACY,IAAI;IACnDP,gBAAgB,CAACQ,SAAS,GAAG,EAAE;IAE/B,KAAK,MAAM,CAACC,MAAM,EAAEC,IAAI,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACrB,QAAQ,CAACI,YAAY,CAAC,CAACkB,OAAO,CAAC,EAAE;MAC3E,MAAMC,MAAM,GAAGhB,QAAQ,CAACiB,aAAa,CAAC,QAAQ,CAAC;MAC/CD,MAAM,CAACR,WAAW,GAAGG,MAAM;MAC3BK,MAAM,CAACE,SAAS,GAAG,eAAe;MAClC,IAAIC,SAAS,GAAGP,IAAI,CAAC,CAAC,CAAC;MACvBI,MAAM,CAACI,OAAO,GAAG,MAAMC,WAAW,CAACF,SAAS,EAAEP,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxDV,gBAAgB,CAACoB,WAAW,CAACN,MAAM,CAAC;IACxC;EACA,CAAC;EAED,oBACExB,OAAA;IAAK+B,KAAK,EAAE,WAAW;IAAAC,QAAA,gBACvBhC,OAAA;MAAK+B,KAAK,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3CpC,OAAA;MAAGqC,IAAI,EAAC,GAAG;MAACN,KAAK,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAAChC,EAAA,CA7BQD,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AA+Bb,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}